buildscript {
  ext.versions = [
    'kotlin': '1.4.0',
    'serializationRuntime': '1.0.0-RC',
    'retrofit': '2.6.4',
    'okhttp': '3.14.7',
    'junit': '4.13',
    'truth': '1.0',
  ]
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${versions.kotlin}"
    classpath "org.jetbrains.kotlin:kotlin-serialization:${versions.kotlin}"
  }
}

apply plugin: 'java-library'
apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'kotlinx-serialization'
apply from: file('gradle/gradle-mvn-push.gradle')

targetCompatibility = JavaVersion.VERSION_1_6
sourceCompatibility = JavaVersion.VERSION_1_6

repositories {
  mavenCentral()
}

dependencies {
  api "com.squareup.retrofit2:retrofit:${versions.retrofit}"
  api "org.jetbrains.kotlinx:kotlinx-serialization-core:${versions.serializationRuntime}"

  testImplementation "junit:junit:${versions.junit}"
  testImplementation "com.squareup.okhttp3:mockwebserver:${versions.okhttp}"
  testImplementation "com.google.truth:truth:${versions.truth}"
  testImplementation "org.jetbrains.kotlinx:kotlinx-serialization-protobuf:${versions.serializationRuntime}"
}

tasks.withType(org.jetbrains.kotlin.gradle.dsl.KotlinCompile).configureEach { task ->
  task.kotlinOptions {
    freeCompilerArgs += [
        '-Xopt-in=kotlin.RequiresOptIn',
        '-Xjsr305=strict',
    ]
  }
}

compileTestKotlin {
  kotlinOptions {
    freeCompilerArgs += [
        '-Xopt-in=kotlinx.serialization.ExperimentalSerializationApi',
    ]
  }
}
